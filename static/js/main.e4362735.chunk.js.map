{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","App.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","s","profile","description","src","alt","label","quantity","followers","views","likes","Statistics","title","statistics","statList","map","stat","item","percentage","id","FriendListItem","status","isOnline","online","offline","width","defaultProps","FriendList","friends","friendList","TransactionHistory","items","transactionHistory","type","amount","currency","App","container","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,KAAO,sBAAsB,IAAM,qBAAqB,SAAW,0BAA0B,MAAQ,uBAAuB,SAAW,4B,iBCAxQD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,MAAQ,0BAA0B,SAAW,6BAA6B,KAAO,2B,gBCA/ID,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,yBAAyB,OAAS,2BAA2B,KAAO,yBAAyB,OAAS,2BAA2B,OAAS,oDAAoD,QAAU,uD,sgBCA7QD,EAAOC,QAAU,CAAC,UAAY,yB,2nBCA9BD,EAAOC,QAAU,CAAC,mBAAqB,iD,snECuCxBC,MApCf,YAA0D,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,IAAKC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,MAC9C,OACE,sBAAKC,UAAWC,IAAEC,QAAlB,UACE,sBAAKF,UAAWC,IAAEE,YAAlB,UACE,qBAAKC,IAAKN,EAAQO,IAAI,gHAAsBL,UAAWC,IAAEH,SACzD,mBAAGE,UAAWC,IAAEN,KAAhB,SAAuBA,IACvB,oBAAGK,UAAWC,IAAEL,IAAhB,cAAuBA,KACvB,mBAAGI,UAAWC,IAAEJ,SAAhB,SAA2BA,OAG7B,qBAAIG,UAAWC,IAAEF,MAAjB,UACE,+BACE,sBAAMC,UAAWC,IAAEK,MAAnB,uBACA,sBAAMN,UAAWC,IAAEM,SAAnB,SAA8BR,EAAMS,eAEtC,+BACE,sBAAMR,UAAWC,IAAEK,MAAnB,mBACA,sBAAMN,UAAWC,IAAEM,SAAnB,SAA8BR,EAAMU,WAEtC,+BACE,sBAAMT,UAAWC,IAAEK,MAAnB,mBACA,sBAAMN,UAAWC,IAAEM,SAAnB,SAA8BR,EAAMW,kB,uBCC/BC,MAtBf,YAAuC,IAAjBC,EAAgB,EAAhBA,MAAOb,EAAS,EAATA,MAC3B,OACE,0BAASC,UAAWC,IAAEY,WAAtB,UACGD,GAAS,oBAAIZ,UAAWC,IAAEW,MAAjB,SAAyBA,IAEnC,oBAAIZ,UAAWC,IAAEa,SAAjB,SACGf,EAAMgB,KAAI,SAAAC,GAAI,OACb,qBAAIhB,UAAWC,IAAEgB,KAAjB,UACE,sBAAMjB,UAAWC,IAAEK,MAAnB,SAA2BU,EAAKV,QAChC,uBAAMN,UAAWC,IAAEiB,WAAnB,UAAgCF,EAAKE,WAArC,SAF0BF,EAAKG,a,uBCQ3C,SAASC,EAAT,GAAyD,IAA/BD,EAA8B,EAA9BA,GAAIrB,EAA0B,EAA1BA,OAAQH,EAAkB,EAAlBA,KAC9B0B,EADgD,EAAZC,SAChBrB,IAAEsB,OAAStB,IAAEuB,QACvC,OACE,qBAAIxB,UAAWC,IAAEgB,KAAjB,UACE,sBAAMjB,UAAWqB,IACjB,qBAAKrB,UAAWC,IAAEH,OAAQM,IAAKN,EAAQO,IAAKV,EAAM8B,MAAM,OACxD,mBAAGzB,UAAWC,IAAEN,KAAhB,SAAuBA,MAHGwB,GAQhCC,EAAeM,aAAe,CAC5BJ,UAAU,GAYGK,MAvCf,YAAkC,IAAZC,EAAW,EAAXA,QACpB,OACE,oBAAI5B,UAAWC,IAAE4B,WAAjB,SACGD,EAAQb,KAAI,gBAAGI,EAAH,EAAGA,GAAIrB,EAAP,EAAOA,OAAQH,EAAf,EAAeA,KAAM2B,EAArB,EAAqBA,SAArB,OACX,cAACF,EAAD,CAEEtB,OAAQA,EACRH,KAAMA,EACN2B,SAAUA,GAHLH,S,yBC+BAW,MApCf,YAAwC,IAAVC,EAAS,EAATA,MAC5B,OACE,wBAAO/B,UAAWC,IAAE+B,mBAApB,UACE,gCACE,+BACE,sCACA,wCACA,+CAIJ,gCACGD,EAAMhB,KAAI,SAAAE,GAAI,OACb,+BACE,6BAAKA,EAAKgB,OACV,6BAAKhB,EAAKiB,SACV,6BAAKjB,EAAKkB,aAHHlB,EAAKE,a,QCgBTiB,MAtBf,WACE,OACE,sBAAKpC,UAAWC,IAAEoC,UAAlB,UACE,cAAC,EAAD,CACE1C,KAAM2C,EAAK3C,KACXC,IAAK0C,EAAK1C,IACVC,SAAUyC,EAAKzC,SACfC,OAAQwC,EAAKxC,OACbC,MAAOuC,EAAKvC,QAGd,cAAC,EAAD,CAAYA,MAAOwC,IAEnB,cAAC,EAAD,CAAY3B,MAAM,0BAA0Bb,MAAOwC,IAEnD,cAAC,EAAD,CAAYX,QAASA,IAErB,cAAC,EAAD,CAAoBG,MAAOS,QChBlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,EAAgBc,QAAQC,O","file":"static/js/main.e4362735.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3oe54\",\"description\":\"Profile_description__1pq_1\",\"avatar\":\"Profile_avatar__3EMCT\",\"name\":\"Profile_name__2geF9\",\"tag\":\"Profile_tag__20p0W\",\"location\":\"Profile_location__FVTOl\",\"stats\":\"Profile_stats__2xbX-\",\"quantity\":\"Profile_quantity__2GKfw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2UdqR\",\"title\":\"Statistics_title__3MyLh\",\"statList\":\"Statistics_statList__2JRLc\",\"item\":\"Statistics_item__36HOd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__hJaF3\",\"item\":\"FriendList_item__2gvZl\",\"avatar\":\"FriendList_avatar__TE3-x\",\"name\":\"FriendList_name__2NvR_\",\"status\":\"FriendList_status__2grMy\",\"online\":\"FriendList_online__227j2 FriendList_status__2grMy\",\"offline\":\"FriendList_offline__2qztL FriendList_status__2grMy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__fozMl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__35sDt\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Profile.module.css';\n\nfunction Profile({ name, tag, location, avatar, stats }) {\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img src={avatar} alt=\"Аватар пользователя\" className={s.avatar} />\n        <p className={s.name}>{name}</p>\n        <p className={s.tag}>@{tag}</p>\n        <p className={s.location}>{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li>\n          <span className={s.label}>Followers</span>\n          <span className={s.quantity}>{stats.followers}</span>\n        </li>\n        <li>\n          <span className={s.label}>Views</span>\n          <span className={s.quantity}>{stats.views}</span>\n        </li>\n        <li>\n          <span className={s.label}>Likes</span>\n          <span className={s.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string,\n  stats: PropTypes.objectOf(PropTypes.number),\n};\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nfunction Statistics({ title, stats }) {\n  return (\n    <section className={s.statistics}>\n      {title && <h2 className={s.title}>{title}</h2>}\n\n      <ul className={s.statList}>\n        {stats.map(stat => (\n          <li className={s.item} key={stat.id}>\n            <span className={s.label}>{stat.label}</span>\n            <span className={s.percentage}>{stat.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FriendList.module.css';\n\nfunction FriendList({ friends }) {\n  return (\n    <ul className={s.friendList}>\n      {friends.map(({ id, avatar, name, isOnline }) => (\n        <FriendListItem\n          key={id}\n          avatar={avatar}\n          name={name}\n          isOnline={isOnline}\n        />\n      ))}\n    </ul>\n  );\n}\n\nfunction FriendListItem({ id, avatar, name, isOnline }) {\n  const status = isOnline ? s.online : s.offline;\n  return (\n    <li className={s.item} key={id}>\n      <span className={status}></span>\n      <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\n      <p className={s.name}>{name}</p>\n    </li>\n  );\n}\n\nFriendListItem.defaultProps = {\n  isOnline: true,\n};\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.object),\n};\nFriendListItem.propTypes = {\n  id: PropTypes.string,\n  avatar: PropTypes.string,\n  name: PropTypes.string,\n  isOnline: PropTypes.bool,\n};\n\nexport default FriendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './TransactionHistory.module.css';\n\nfunction TransactionHistory({ items }) {\n  return (\n    <table className={s.transactionHistory}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(item => (\n          <tr key={item.id}>\n            <th>{item.type}</th>\n            <th>{item.amount}</th>\n            <th>{item.currency}</th>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      //   amount: PropTypes.number.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default TransactionHistory;\n","import React from 'react';\nimport s from './App.module.css';\nimport Profile from './components/Profile/Profile';\nimport user from './data/user.json';\nimport Statistics from './components/Statistics/Statistics';\nimport statisticalData from './data/statistical-data.json';\nimport FriendList from './components/FriendList/FriendList';\nimport friends from './data/friends.json';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport transactions from './data/transactions.json';\n\nfunction App() {\n  return (\n    <div className={s.container}>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n\n      <Statistics stats={statisticalData} />\n\n      <Statistics title=\"Upload stats with title\" stats={statisticalData} />\n\n      <FriendList friends={friends} />\n\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}